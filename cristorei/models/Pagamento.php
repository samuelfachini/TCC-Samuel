<?php

namespace app\models;

use app\dictionaries\SituacaoDebito;
use Yii;
use \app\models\base\BasePagamento;
use yii\data\ActiveDataProvider;
use yii\helpers\VarDumper;

/**
 * This is the model class for table "pagamento".
 */
class Pagamento extends BasePagamento
{
    const PKS_DEBITO = 'pagamento.pks_debito';

    public function rules()
    {
        return [
            [['qtd_parcelas', 'primeiro_vencimento'], 'required'],
            [['qtd_parcelas', 'perc_desconto'], 'integer'],
            [['primeiro_vencimento'], 'safe'],
            [['valor_total'], 'number']
        ];
    }


    public function obterDataProviderDebitos()
    {
        $query = Debito::find()->joinWith('sepultura')->where(['in','debito_id', Yii::$app->session->get(self::PKS_DEBITO)]);

        return new ActiveDataProvider([
            'query' => $query,
        ]);
    }


    public function beforeSave($insert)
    {
        if (parent::beforeSave($insert)) {

            if ($insert) {
                $this->valor_total = Debito::find()->select(["SUM(valor)"])->where(['in','debito_id', Yii::$app->session->get(self::PKS_DEBITO)])->scalar();
            }

            return true;
        }
        return false;
    }


    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub

        Debito::updateAll(['pagamento_id' => $this->pagamento_id, 'situacao' => SituacaoDebito::PARCELAMENTO],['in','debito_id',Yii::$app->session->get(self::PKS_DEBITO)]);
        Yii::$app->session->remove(self::PKS_DEBITO);

        Parcela::gerarParcelasPagamento($this);
    }

    public function beforeDelete()
    {
        if (parent::beforeDelete()) {

            $lista_debitos = Debito::find()->select(['debito_id'])->where(['pagamento_id' => $this->pagamento_id])->column();
            Debito::updateAll(['situacao' => SituacaoDebito::ABERTO],['debito_id' => $lista_debitos]);

            return true;
        }
    }


    /**
     * @inheritdoc
     */
//    public function rules()
//    {
//        return array_merge(parent::rules(), [
//            ]);
//    }
	
}